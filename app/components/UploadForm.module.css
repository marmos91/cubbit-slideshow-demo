.uploadContainer {
    /* Scoped CSS variables */
    --primary-color: #009eff;
    --primary-hover: #007acc;
    --error-color: #ff4d4f;
    --success-color: #52c41a;
    --border-radius: 8px;
    --transition-duration: 0.3s;
    --input-border: #009eff;
    --max-width: 600px;

    background-color: #121212;  /* Dark background */
    color: #e0e0e0;              /* Light text */
    padding: 2rem;
    margin: 2rem auto;
    max-width: var(--max-width);
    border-radius: var(--border-radius);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.8);
}

.form {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    width: 100%;
}

.instructions {
    text-align: center;
    color: #e0e0e0;
    font-size: 1.1rem;
    line-height: 1.4;
}

/* Keyframe for fadeIn animation */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* File Input Wrapper */
.fileInputWrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
}

/* Hide the default file input */
.fileInput {
    display: none;
}

/* Custom file input label styled as a button */
.fileLabel {
    display: inline-block;
    width: 100%;
    background-color: var(--primary-color);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: background-color var(--transition-duration), transform var(--transition-duration);
    text-align: center;
    font-weight: 500;
}

.fileLabel:hover,
.fileLabel:focus {
    background-color: var(--primary-hover);
    transform: scale(1.03);
}

/* Display selected file name */
.selectedFileName {
    font-style: italic;
    color: #aaa;
    font-size: 0.95rem;
    text-align: center;
}

/* Button styling */
.button {
    background-color: var(--primary-color);
    border: none;
    border-radius: var(--border-radius);
    color: white;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color var(--transition-duration), transform var(--transition-duration);
    width: 100%;
}

.button:hover,
.button:focus {
    background-color: var(--primary-hover);
    outline: none;
    transform: scale(1.03);
}

/* Disabled state styling with no hover/focus animation */
.button:disabled {
    background-color: #555;
    color: #999;
    cursor: not-allowed;
    opacity: 0.7;
}
.button:disabled:hover,
.button:disabled:focus {
    background-color: #555;
    transform: none;
}

/* Toast container for error and status messages */
.toastContainer {
    position: fixed;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 9999;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    width: 90%;
    max-width: 600px;
    padding: 0 1rem;
}

/* Common toast styling with no text wrapping */
.errorToast,
.statusToast {
    width: 100%;
    padding: 1rem;
    border-radius: var(--border-radius);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
    font-size: 1.2rem; /* Larger text */
    text-align: center;
    white-space: nowrap; /* Prevent wrapping */
    overflow: hidden;
    text-overflow: ellipsis;
    animation: fadeIn 0.5s ease-in-out;
}

/* Toast styles for error messages */
.errorToast {
    background-color: #2a0000;
    color: var(--error-color);
}

/* Toast styles for success messages */
.statusToast {
    background-color: #002200;
    color: var(--success-color);
}

/* Mobile adjustments */
@media (max-width: 600px) {
    .toastContainer {
        bottom: 0.5rem;
        gap: 0.5rem;
    }
    .errorToast,
    .statusToast {
        font-size: 1.1rem;
        padding: 0.75rem;
    }
}
